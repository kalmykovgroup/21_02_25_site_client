import {createAsyncThunk} from "@reduxjs/toolkit";
import {AppDispatch, RootState} from "../types.ts";
import {fetchGetWishList, fetchUpdateWishList} from "../../api/ProductSpace/WishListService/WishListService.ts";
import {store} from "../store.ts";
import {addNotification} from "../notificationsSlice.ts";
import {ShortProductDtoUiExtended} from "../../api/ProductSpace/ProductService/UI/ShortProductDtoUiExtended.ts";
import {setLoadingState, setOriginalWishList, setWishList} from "./wishListSlice.ts";

export const syncWishListWithServer = createAsyncThunk<void, void, { state: RootState; dispatch: AppDispatch }>(
    "wishList/syncWithServer",
    async (_, { getState, dispatch }) => {

        console.log("—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è...")

        const state = getState();

        try {
            dispatch(setLoadingState(true));


            const response = await fetchGetWishList();

            if(!response.success){
                store.dispatch(addNotification({ message: response.error ?? "Error when adding products to favorites", type: "error" }));
            }

            // ‚úÖ 1. –ü–æ–ª—É—á–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
            const serverWishList: ShortProductDtoUiExtended[] = response.wishList;

            console.log("–ü–æ–ª—É—á–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ —Å —Å–µ—Ä–≤–µ—Ä–∞");
            console.log(serverWishList);

            // ‚úÖ 2. –ü–æ–ª—É—á–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –∏–∑ `Redux` (persist)
            let localWishList = state.wishList.wishList;

            console.log(" 2. –ü–æ–ª—É—á–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –∏–∑ `Redux` (persist)");
            console.log(localWishList);

            // ‚úÖ 3. –ù–∞–π—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã—Ö **–Ω–µ—Ç –≤ `localStorage`, –Ω–æ –µ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ** ‚Üí –¥–æ–±–∞–≤–∏—Ç—å –≤ `wishList`
            const missingFromLocal = serverWishList.filter(
                (serverItem) => !localWishList.some((localItem) => localItem.id === serverItem.id)
            );

            console.log("–ø—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã—Ö **–Ω–µ—Ç –≤ localStorage");
            console.log(missingFromLocal);


            if (missingFromLocal.length > 0) {
                // ‚úÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º `isFavorite = true` –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
                const updatedMissingFromLocal = missingFromLocal.map((item) => ({
                    ...item,
                    isFavorite: true
                }));

                localWishList = [...localWishList, ...updatedMissingFromLocal]; // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ç–æ–≤–∞—Ä—ã
            }

            // ‚úÖ 4. –ù–∞–π—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã—Ö **–Ω–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –Ω–æ –µ—Å—Ç—å –≤ `localStorage`** ‚Üí –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            const missingFromServer = localWishList.filter(
                (localItem) => !serverWishList.some((serverItem) => serverItem.id === localItem.id)
            );

            console.log("–ø—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã—Ö **–Ω–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ");
            console.log(missingFromServer);

            if (missingFromServer.length > 0) {
                console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä ${missingFromServer.length} –ø—Ä–æ–¥—É–∫—Ç–æ–≤...`);

                const AddWishListProductResponse =  await fetchUpdateWishList(missingFromServer); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ç–æ–≤–∞—Ä—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä

                if(!AddWishListProductResponse.success){
                    store.dispatch(addNotification({ message: AddWishListProductResponse.error ?? "Error when sending data to the server", type: "error" }));
                }
            }

            // ‚úÖ 5. –û–±–Ω–æ–≤–ª—è–µ–º `Redux`, `redux-persist` —Å–æ—Ö—Ä–∞–Ω–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
            dispatch(setWishList(localWishList));
            dispatch(setOriginalWishList(localWishList));

            console.log(`–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ`);

        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ WishList —Å —Å–µ—Ä–≤–µ—Ä–æ–º:", error);
        } finally {
            dispatch(setLoadingState(false));
        }
    }
);


let syncTimeout: ReturnType<typeof setTimeout> | null = null; // ‚úÖ –¢–∞–π–º–µ—Ä –±–µ–∑ –æ—à–∏–±–∫–∏


export const toggleFavoriteThunk = createAsyncThunk<
    void,
    ShortProductDtoUiExtended,
    { state: RootState }
>(
    "products/toggleFavorite",
    async (product, { getState, dispatch }) => {
        const state = getState();
        const customer = state.authSlice.customer;
        const isAuthenticated = !!customer;


        // ‚úÖ –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ `wishList` –∏–∑ Redux
        const wishListCopy = [...state.wishList.wishList]; // –ö–æ–ø–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è –º—É—Ç–∞—Ü–∏–∏
        const index = wishListCopy.findIndex((item) => item.id === product.id);
        const isAdding = index === -1;

        if (isAdding) {
            wishListCopy.push({ ...product, isFavorite: true });
        } else {
            wishListCopy.splice(index, 1);
        }


        // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º `Redux`, `redux-persist` —Å–∞–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        dispatch(setWishList(wishListCopy));

        if (isAuthenticated) {
            // ‚úÖ –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –∂–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –∑–∞–ø—Ä–æ—Å–∞
            if (syncTimeout) {
                clearTimeout(syncTimeout); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä
            }

            syncTimeout = setTimeout(async () => {
                // ‚úÖ –ü–æ–ª—É—á–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
                const editList = findWishListChanges(state.wishList.originalWishList, wishListCopy);

                if (editList.length === 0) return;

                dispatch(setOriginalWishList(wishListCopy))
                await updateWishListThunk(editList); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            }, 2000); // ‚è≥ –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–ª–∏–∫–∞
        }
    }
);

function findWishListChanges(originalWishList: ShortProductDtoUiExtended[], wishList: ShortProductDtoUiExtended[]) {
    const changes: ShortProductDtoUiExtended[] = [];

    // –°–æ–∑–¥–∞–µ–º `Map` –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ `id`
    const originalMap = new Map(originalWishList.map((product) => [product.id, product]));

    // üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
    for (const product of wishList) {
        const originalProduct = originalMap.get(product.id);

        if (!originalProduct) {
            // ‚úÖ –ü—Ä–æ–¥—É–∫—Ç –Ω–æ–≤—ã–π (–±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω)
            changes.push({ ...product });
        } else if (product.isFavorite !== originalProduct.isFavorite) {
            // ‚úÖ –ü—Ä–æ–¥—É–∫—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è (`isFavorite` –ø–æ–º–µ–Ω—è–ª—Å—è)
            changes.push({ ...product });
        }

        // ‚úÖ –£–¥–∞–ª—è–µ–º –∏–∑ `originalMap`, —á—Ç–æ–±—ã –ø–æ—Å–ª–µ –Ω–∞–π—Ç–∏ —É–¥–∞–ª–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        originalMap.delete(product.id);
    }

    // üîπ –û—Å—Ç–∞–≤—à–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã –≤ `originalMap` - —ç—Ç–æ —É–¥–∞–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
    for (const removedProduct of originalMap.values()) {
        changes.push({ ...removedProduct, isFavorite: false }); // –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ –ø—Ä–æ–¥—É–∫—Ç —É–¥–∞–ª–µ–Ω
    }

    return changes;
}


async function updateWishListThunk(bach: ShortProductDtoUiExtended[]) {

    try {
        const response = await fetchUpdateWishList(bach); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ `id` –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        if (response.success) {
            console.log(`‚úÖ –ò–∑–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä`);
        } else {
            console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–∞–≤–∫–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:", response.error);
        }
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –±–∞—Ç—á-–∑–∞–ø—Ä–æ—Å–∞:", error);
    }
}
