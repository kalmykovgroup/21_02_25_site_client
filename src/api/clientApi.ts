import axios from "axios";
import { store } from "../store/store"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Redux store
import { logoutThunk } from "../store/userSpace/authSlice.ts";
import {setAuthModalOpen} from "../store/uiSlice.ts";
import {addNotification} from "../store/notificationSlice.ts";
import i18n from "../i18n.ts";

const apiClient = axios.create({
    baseURL: "/api", // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–∫—Å–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ Vite
    timeout: 5000,
    headers: {
        "Content-Type": "application/json",
    },
    withCredentials: true, // ‚úÖ –†–∞–∑—Ä–µ—à–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É Cookie (–Ω—É–∂–Ω–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ)
});

// ‚úÖ –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
apiClient.interceptors.response.use(
    (response) => response,
    (error) => {
        console.error("‚ùå API Error:", error);

        let errorMessage = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞";

        if (error.response?.status === 401) {
            console.warn("üîí 401 Unauthorized: –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã...");
            store.dispatch(logoutThunk());
            store.dispatch(setAuthModalOpen(true));
            errorMessage = i18n.t("errors.unauthorized");
        } else if (error.response) {
            // ‚úÖ –î–æ—Å—Ç–∞–µ–º `message` –∏–∑ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
            errorMessage = error.response.data?.message || `–û—à–∏–±–∫–∞ ${error.response.status}`;
        }

        // ‚úÖ –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–¥–∞—ë–º —Å—Ç—Ä–æ–∫—É –≤–º–µ—Å—Ç–æ –æ–±—ä–µ–∫—Ç–∞ –æ—à–∏–±–∫–∏
        store.dispatch(addNotification({ message: errorMessage, type: "error" }));

        return Promise.reject(error);
    }
);

export default apiClient;
