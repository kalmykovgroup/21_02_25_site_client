import axios from "axios";
import { store } from "../store/store"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Redux store
import { logoutThunk } from "../store/userSpace/authSlice.ts";
import {setAuthModalOpen} from "../store/uiSlice.ts";
import {addNotification} from "../store/notificationSlice.ts";
import i18n from "../i18n.ts";

const apiClient = axios.create({
    baseURL: "/api", // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–∫—Å–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ Vite
    timeout: 5000,
    headers: {
        "Content-Type": "application/json",
    },
    withCredentials: true, // ‚úÖ –†–∞–∑—Ä–µ—à–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É Cookie (–Ω—É–∂–Ω–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ)
});

// ‚úÖ –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
apiClient.interceptors.response.use(
    (response) => response,
    (error) => {
        console.error("‚ùå API Error:", error);

        if (error.response?.status === 401) {
            console.warn("üîí 401 Unauthorized: –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã...");

            store.dispatch(logoutThunk()); // ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã—Ö–æ–¥ –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            // 2. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—Ö–æ–¥–∞
            store.dispatch(setAuthModalOpen(true));
        }else{
            store.dispatch(addNotification({ message: error, type: "error" }));
        }


        const message =
            error.response?.status === 401
                ? i18n.t("errors.unauthorized")
                : i18n.t("errors.serverError");

        store.dispatch(addNotification({ type: "error", message: message }));

        return Promise.reject(error);
    }
);

export default apiClient;
